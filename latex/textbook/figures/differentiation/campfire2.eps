%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.18.4 (http://poppler.freedesktop.org)
%%Creator: cairo 1.12.16 (http://cairographics.org)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 187 70
%%HiResBoundingBox: 0 0 186.388535 69.055794
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq pdfPatternCS not and {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne pdfPatternCS or {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
/DeviceRGB {} CS
[1 0 0] SC
0.8 w
0 J
0 j
[] 0 d
4 M
q
[1 0 0 -1 0 69.055794] cm
23.902 54.203 m
23.902 1.406 l
S
Q
/DeviceRGB {} cs
[1 0 0] sc
/DeviceRGB {} CS
[1 0 0] SC
0.2 w
q
[0.0000000000000001 1 1 -0.0000000000000001 0 69.055794] cm
-53.422 23.902 m
-53.422 24.344 -53.781 24.703 -54.223 24.703 c
-54.664 24.703 -55.02 24.344 -55.02 23.902 c
-55.02 23.461 -54.664 23.105 -54.223 23.105 c
-53.781 23.105 -53.422 23.461 -53.422 23.902 c
h
f*
-53.422 23.902 m
-53.422 24.344 -53.781 24.703 -54.223 24.703 c
-54.664 24.703 -55.02 24.344 -55.02 23.902 c
-55.02 23.461 -54.664 23.105 -54.223 23.105 c
-53.781 23.105 -53.422 23.461 -53.422 23.902 c
h
S
Q
/DeviceRGB {} cs
[1 0 0] sc
/DeviceRGB {} CS
[1 0 0] SC
q
[0.0000000000000001 -1 -1 -0.0000000000000001 0 69.055794] cm
2.363 -23.902 m
3.164 -24.703 l
0.363 -23.902 l
3.164 -23.105 l
2.363 -23.902 l
h
f*
2.363 -23.902 m
3.164 -24.703 l
0.363 -23.902 l
3.164 -23.105 l
2.363 -23.902 l
h
S
Q
/DeviceRGB {} cs
[0 0 0] sc
3.176 4.931 m
3.176 6.88 4.152 7.388 4.789 7.388 c
4.902 7.388 5.652 7.368 6.066 6.939 c
5.578 6.9 5.504 6.544 5.504 6.396 c
5.504 6.075 5.727 5.849 6.047 5.849 c
6.363 5.849 6.609 6.036 6.609 6.411 c
6.609 7.22 5.691 7.689 4.77 7.689 c
3.27 7.689 2.184 6.396 2.184 4.911 c
2.184 3.376 3.363 2.193 4.754 2.193 c
6.348 2.193 6.738 3.638 6.738 3.751 c
6.738 3.864 6.609 3.864 6.57 3.864 c
6.477 3.864 6.441 3.825 6.422 3.751 c
6.082 2.646 5.297 2.493 4.863 2.493 c
4.227 2.493 3.176 3.001 3.176 4.931 c
h
f
11.059 3.224 m
11.113 2.755 11.434 2.251 11.996 2.251 c
12.258 2.251 12.988 2.419 12.988 3.396 c
12.988 4.068 l
12.691 4.068 l
12.691 3.396 l
12.691 2.7 12.391 2.626 12.258 2.626 c
11.863 2.626 11.809 3.169 11.809 3.224 c
11.809 5.607 l
11.809 6.114 11.809 6.583 11.379 7.032 c
10.91 7.501 10.309 7.689 9.746 7.689 c
8.754 7.689 7.926 7.126 7.926 6.337 c
7.926 5.982 8.172 5.775 8.488 5.775 c
8.828 5.775 9.035 6.021 9.035 6.318 c
9.035 6.47 8.977 6.864 8.414 6.864 c
8.754 7.294 9.332 7.427 9.707 7.427 c
10.309 7.427 10.984 6.958 10.984 5.888 c
10.984 5.458 l
10.363 5.419 9.539 5.38 8.789 5.025 c
7.891 4.614 7.59 3.993 7.59 3.47 c
7.59 2.493 8.754 2.193 9.504 2.193 c
10.289 2.193 10.832 2.681 11.059 3.224 c
h
10.984 5.193 m
10.984 3.993 l
10.984 2.868 10.121 2.458 9.578 2.458 c
8.996 2.458 8.508 2.868 8.508 3.47 c
8.508 4.126 9.016 5.118 10.984 5.193 c
h
f
14.375 6.431 m
14.375 3.224 l
14.375 2.7 14.242 2.7 13.438 2.7 c
13.438 2.325 l
13.867 2.345 14.469 2.364 14.805 2.364 c
15.105 2.364 15.723 2.345 16.137 2.325 c
16.137 2.7 l
15.332 2.7 15.199 2.7 15.199 3.224 c
15.199 5.439 l
15.199 6.677 16.062 7.349 16.812 7.349 c
17.582 7.349 17.711 6.712 17.711 6.021 c
17.711 3.224 l
17.711 2.7 17.582 2.7 16.773 2.7 c
16.773 2.325 l
17.188 2.345 17.805 2.364 18.125 2.364 c
18.426 2.364 19.062 2.345 19.457 2.325 c
19.457 2.7 l
18.668 2.7 18.535 2.7 18.535 3.224 c
18.535 5.439 l
18.535 6.677 19.379 7.349 20.148 7.349 c
20.898 7.349 21.031 6.712 21.031 6.021 c
21.031 3.224 l
21.031 2.7 20.898 2.7 20.094 2.7 c
20.094 2.325 l
20.504 2.345 21.125 2.364 21.441 2.364 c
21.762 2.364 22.379 2.345 22.793 2.325 c
22.793 2.7 l
22.176 2.7 21.875 2.7 21.855 3.056 c
21.855 5.345 l
21.855 6.376 21.855 6.732 21.48 7.161 c
21.312 7.368 20.918 7.614 20.223 7.614 c
19.23 7.614 18.688 6.9 18.5 6.431 c
18.332 7.482 17.449 7.614 16.906 7.614 c
16.023 7.614 15.461 7.107 15.125 6.357 c
15.125 7.614 l
13.438 7.482 l
13.438 7.107 l
14.281 7.107 14.375 7.032 14.375 6.431 c
h
f
25.086 6.825 m
25.086 7.614 l
23.359 7.482 l
23.359 7.107 l
24.203 7.107 24.297 7.032 24.297 6.505 c
24.297 0.919 l
24.297 0.376 24.168 0.376 23.359 0.376 c
23.359 0.001 l
23.773 0.021 24.391 0.036 24.691 0.036 c
25.031 0.036 25.629 0.021 26.043 0.001 c
26.043 0.376 l
25.254 0.376 25.125 0.376 25.125 0.919 c
25.125 3.036 l
25.18 2.833 25.688 2.193 26.586 2.193 c
28.012 2.193 29.25 3.376 29.25 4.911 c
29.25 6.431 28.105 7.614 26.754 7.614 c
25.816 7.614 25.312 7.087 25.086 6.825 c
h
25.125 3.693 m
25.125 6.357 l
25.461 6.974 26.043 7.314 26.66 7.314 c
27.543 7.314 28.254 6.263 28.254 4.911 c
28.254 3.47 27.43 2.458 26.547 2.458 c
26.062 2.458 25.609 2.7 25.293 3.189 c
25.125 3.431 25.125 3.45 25.125 3.693 c
h
f
33.621 7.107 m
34.164 7.107 34.242 6.958 34.242 6.47 c
34.242 3.224 l
34.242 2.7 34.109 2.7 33.32 2.7 c
33.32 2.325 l
33.715 2.345 34.336 2.364 34.633 2.364 c
34.934 2.364 35.535 2.345 35.965 2.325 c
35.965 2.7 l
35.16 2.7 35.027 2.7 35.027 3.224 c
35.027 7.63 l
33.527 7.521 l
33.34 7.501 33.32 7.501 33.32 7.501 c
33.285 7.482 33.266 7.482 33.098 7.482 c
31.691 7.482 l
31.691 8.833 l
31.691 10.013 32.723 10.501 33.453 10.501 c
33.809 10.501 34.242 10.368 34.484 10.107 c
33.996 10.068 33.922 9.751 33.922 9.544 c
33.922 9.15 34.242 9.001 34.465 9.001 c
34.746 9.001 35.008 9.189 35.008 9.544 c
35.008 10.255 34.352 10.763 33.473 10.763 c
32.367 10.763 30.941 10.146 30.941 8.849 c
30.941 7.482 l
29.984 7.482 l
29.984 7.107 l
30.941 7.107 l
30.941 3.224 l
30.941 2.7 30.809 2.7 30.004 2.7 c
30.004 2.325 l
30.398 2.345 31.035 2.364 31.336 2.364 c
31.633 2.364 32.215 2.345 32.664 2.325 c
32.664 2.7 l
31.859 2.7 31.727 2.7 31.727 3.224 c
31.727 7.107 l
33.621 7.107 l
h
f
38.312 6.302 m
38.312 7.614 l
36.645 7.482 l
36.645 7.107 l
37.488 7.107 37.582 7.032 37.582 6.431 c
37.582 3.224 l
37.582 2.7 37.453 2.7 36.645 2.7 c
36.645 2.325 l
37.113 2.345 37.676 2.364 38.016 2.364 c
38.484 2.364 39.047 2.364 39.531 2.325 c
39.531 2.7 l
39.27 2.7 l
38.391 2.7 38.371 2.833 38.371 3.263 c
38.371 5.099 l
38.371 6.282 38.875 7.349 39.777 7.349 c
39.852 7.349 39.891 7.349 39.906 7.333 c
39.871 7.333 39.625 7.181 39.625 6.864 c
39.625 6.544 39.891 6.357 40.152 6.357 c
40.359 6.357 40.656 6.505 40.656 6.88 c
40.656 7.255 40.281 7.614 39.777 7.614 c
38.895 7.614 38.465 6.806 38.312 6.302 c
h
f
42.32 5.345 m
42.398 7.126 43.41 7.427 43.82 7.427 c
45.039 7.427 45.172 5.814 45.172 5.345 c
42.32 5.345 l
h
42.32 5.083 m
45.66 5.083 l
45.922 5.083 45.961 5.083 45.961 5.345 c
45.961 6.525 45.305 7.689 43.82 7.689 c
42.434 7.689 41.328 6.45 41.328 4.95 c
41.328 3.357 42.586 2.193 43.953 2.193 c
45.414 2.193 45.961 3.525 45.961 3.751 c
45.961 3.864 45.867 3.9 45.789 3.9 c
45.695 3.9 45.66 3.825 45.641 3.732 c
45.227 2.493 44.141 2.493 44.027 2.493 c
43.43 2.493 42.961 2.849 42.68 3.302 c
42.32 3.864 42.32 4.65 42.32 5.083 c
h
f
/DeviceRGB {} cs
[0.3137 0.1765 0.0863] sc
/DeviceRGB {} CS
[0 0 0] SC
0.69282 w
1 J
q
[-1 0.57735 -0.57735 -1 0 69.055794] cm
-43.466 17.83 m
-26.837 17.83 l
-26.835 21.987 l
-43.464 21.988 l
-43.466 17.83 l
h
f
-43.466 17.83 m
-26.837 17.83 l
-26.835 21.987 l
-43.464 21.988 l
-43.466 17.83 l
h
S
Q
/DeviceRGB {} cs
[1 0 0] sc
/DeviceRGB {} CS
[0.502 0 0] SC
0.8 w
q
[-1 0 0 -1 0 69.055794] cm
-23.656 42.602 m
-29.891 31.801 l
-36.129 21.004 l
-11.184 21.004 l
-17.422 31.801 l
-23.656 42.602 l
h
f
-23.656 42.602 m
-29.891 31.801 l
-36.129 21.004 l
-11.184 21.004 l
-17.422 31.801 l
-23.656 42.602 l
h
S
Q
/DeviceRGB {} cs
[0.3137 0.1765 0.0863] sc
/DeviceRGB {} CS
[0 0 0] SC
0.69282 w
q
[1 0.57735 0.57735 -1 0 69.055794] cm
-7.812 38.943 m
8.816 38.945 l
8.815 43.101 l
-7.81 43.1 l
-7.812 38.943 l
h
f
-7.812 38.943 m
8.816 38.945 l
8.815 43.101 l
-7.81 43.1 l
-7.812 38.943 l
h
S
Q
0.8 w
0 J
q
[1 0 0 -1 0 69.055794] cm
136.984 11.004 m
136.984 30.203 l
S
Q
q
[1 0 0 -1 0 69.055794] cm
146.582 11.004 m
141.785 15.805 l
132.184 15.805 l
127.383 20.605 l
S
Q
q
[1 0 0 -1 0 69.055794] cm
146.582 44.605 m
141.785 44.605 l
136.984 30.203 l
132.184 44.605 l
127.383 44.605 l
S
Q
/DeviceRGB {} cs
[0.9137 0.7765 0.6863] sc
/DeviceRGB {} CS
[0 0 0] SC
1 J
q
[-1 0 0 -1 0 69.055794] cm
-132.184 6.203 m
-132.184 8.855 -134.332 11.004 -136.984 11.004 c
-139.633 11.004 -141.785 8.855 -141.785 6.203 c
-141.785 3.555 -139.633 1.406 -136.984 1.406 c
-134.332 1.406 -132.184 3.555 -132.184 6.203 c
h
f
-132.184 6.203 m
-132.184 8.855 -134.332 11.004 -136.984 11.004 c
-139.633 11.004 -141.785 8.855 -141.785 6.203 c
-141.785 3.555 -139.633 1.406 -136.984 1.406 c
-134.332 1.406 -132.184 3.555 -132.184 6.203 c
h
S
Q
/DeviceRGB {} cs
[0 0 0] sc
3.75 64.689 m
4.781 64.689 l
5.023 64.689 5.137 64.689 5.137 64.931 c
5.137 65.064 5.023 65.064 4.82 65.064 c
3.824 65.064 l
4.07 66.431 l
4.125 66.677 4.293 67.521 4.367 67.669 c
4.461 67.896 4.668 68.083 4.93 68.083 c
4.969 68.083 5.289 68.083 5.512 67.857 c
4.988 67.821 4.855 67.388 4.855 67.22 c
4.855 66.939 5.082 66.79 5.305 66.79 c
5.625 66.79 5.961 67.071 5.961 67.521 c
5.961 68.064 5.418 68.345 4.93 68.345 c
4.52 68.345 3.77 68.118 3.414 66.939 c
3.336 66.696 3.301 66.564 3.02 65.064 c
2.195 65.064 l
1.949 65.064 1.82 65.064 1.82 64.837 c
1.82 64.689 1.93 64.689 2.156 64.689 c
2.945 64.689 l
2.062 59.962 l
1.836 58.802 1.633 57.712 1.012 57.712 c
0.957 57.712 0.676 57.712 0.43 57.939 c
0.992 57.978 1.105 58.407 1.105 58.575 c
1.105 58.857 0.883 59.009 0.656 59.009 c
0.336 59.009 0 58.728 0 58.275 c
0 57.751 0.523 57.45 1.012 57.45 c
1.668 57.45 2.156 58.165 2.363 58.614 c
2.758 59.364 3.02 60.806 3.039 60.9 c
3.75 64.689 l
h
f
10.457 57.04 m
10.457 57.075 10.457 57.095 10.254 57.302 c
8.77 58.802 8.379 61.071 8.379 62.907 c
8.379 64.989 8.828 67.071 10.309 68.552 c
10.457 68.7 10.457 68.72 10.457 68.759 c
10.457 68.853 10.422 68.888 10.348 68.888 c
10.215 68.888 9.145 68.064 8.434 66.544 c
7.832 65.232 7.684 63.9 7.684 62.907 c
7.684 61.97 7.816 60.525 8.473 59.157 c
9.203 57.696 10.215 56.907 10.348 56.907 c
10.422 56.907 10.457 56.946 10.457 57.04 c
h
f
15.145 63.525 m
15.219 63.825 15.5 64.931 16.328 64.931 c
16.383 64.931 16.684 64.931 16.926 64.782 c
16.59 64.708 16.363 64.427 16.363 64.126 c
16.363 63.939 16.496 63.712 16.812 63.712 c
17.078 63.712 17.453 63.919 17.453 64.407 c
17.453 65.025 16.758 65.196 16.344 65.196 c
15.652 65.196 15.238 64.556 15.09 64.294 c
14.789 65.083 14.152 65.196 13.797 65.196 c
12.559 65.196 11.863 63.657 11.863 63.357 c
11.863 63.228 11.996 63.228 12.016 63.228 c
12.109 63.228 12.145 63.263 12.164 63.357 c
12.578 64.634 13.363 64.931 13.777 64.931 c
14 64.931 14.414 64.821 14.414 64.126 c
14.414 63.751 14.207 62.962 13.777 61.275 c
13.59 60.544 13.156 60.04 12.633 60.04 c
12.559 60.04 12.297 60.04 12.031 60.189 c
12.332 60.263 12.594 60.509 12.594 60.845 c
12.594 61.165 12.332 61.259 12.164 61.259 c
11.789 61.259 11.508 60.958 11.508 60.564 c
11.508 60.021 12.09 59.775 12.613 59.775 c
13.422 59.775 13.852 60.618 13.871 60.677 c
14.02 60.243 14.453 59.775 15.164 59.775 c
16.402 59.775 17.078 61.314 17.078 61.614 c
17.078 61.743 16.984 61.743 16.945 61.743 c
16.832 61.743 16.812 61.689 16.777 61.614 c
16.383 60.321 15.578 60.04 15.203 60.04 c
14.734 60.04 14.547 60.415 14.547 60.825 c
14.547 61.087 14.602 61.353 14.734 61.876 c
15.145 63.525 l
h
f
21.434 62.907 m
21.434 63.825 21.305 65.271 20.648 66.638 c
19.934 68.103 18.902 68.888 18.789 68.888 c
18.715 68.888 18.66 68.833 18.66 68.759 c
18.66 68.72 18.66 68.7 18.883 68.478 c
20.066 67.294 20.742 65.4 20.742 62.907 c
20.742 60.845 20.309 58.743 18.828 57.243 c
18.66 57.095 18.66 57.075 18.66 57.04 c
18.66 56.962 18.715 56.907 18.789 56.907 c
18.902 56.907 19.992 57.732 20.684 59.251 c
21.305 60.564 21.434 61.896 21.434 62.907 c
h
f
/DeviceRGB {} CS
[0 0 0] SC
0 J
q
[1 0 0 -1 0 69.055794] cm
26.582 1.406 m
26.582 1.406 40.984 20.605 55.383 30.203 c
69.785 39.805 184.984 39.805 184.984 39.805 c
S
Q
/DeviceRGB {} CS
[1 0 0] SC
q
[1 0 0 -1 0 69.055794] cm
19.734 49.406 m
184.984 49.406 l
S
Q
/DeviceRGB {} cs
[1 0 0] sc
/DeviceRGB {} CS
[1 0 0] SC
0.2 w
q
[1 0 0 -1 0 69.055794] cm
20.52 49.406 m
20.52 49.848 20.16 50.203 19.719 50.203 c
19.277 50.203 18.918 49.848 18.918 49.406 c
18.918 48.965 19.277 48.605 19.719 48.605 c
20.16 48.605 20.52 48.965 20.52 49.406 c
h
f*
20.52 49.406 m
20.52 49.848 20.16 50.203 19.719 50.203 c
19.277 50.203 18.918 49.848 18.918 49.406 c
18.918 48.965 19.277 48.605 19.719 48.605 c
20.16 48.605 20.52 48.965 20.52 49.406 c
h
S
Q
/DeviceRGB {} cs
[1 0 0] sc
/DeviceRGB {} CS
[1 0 0] SC
q
[-1 -0.0000000000000001 -0.0000000000000001 1 0 69.055794] cm
-184.023 -49.406 m
-183.223 -50.203 l
-186.023 -49.406 l
-183.223 -48.605 l
-184.023 -49.406 l
h
f*
-184.023 -49.406 m
-183.223 -50.203 l
-186.023 -49.406 l
-183.223 -48.605 l
-184.023 -49.406 l
h
S
Q
/DeviceRGB {} cs
[0 0 0] sc
181.227 6.075 m
181.301 6.376 181.582 7.482 182.406 7.482 c
182.465 7.482 182.766 7.482 183.008 7.329 c
182.672 7.255 182.445 6.974 182.445 6.673 c
182.445 6.485 182.578 6.263 182.895 6.263 c
183.156 6.263 183.531 6.47 183.531 6.954 c
183.531 7.575 182.84 7.743 182.426 7.743 c
181.734 7.743 181.32 7.107 181.172 6.845 c
180.871 7.63 180.234 7.743 179.875 7.743 c
178.641 7.743 177.945 6.204 177.945 5.907 c
177.945 5.775 178.078 5.775 178.094 5.775 c
178.188 5.775 178.227 5.814 178.246 5.907 c
178.656 7.181 179.445 7.482 179.859 7.482 c
180.082 7.482 180.496 7.368 180.496 6.673 c
180.496 6.298 180.289 5.513 179.859 3.825 c
179.672 3.095 179.238 2.587 178.715 2.587 c
178.641 2.587 178.375 2.587 178.113 2.735 c
178.414 2.814 178.676 3.056 178.676 3.392 c
178.676 3.712 178.414 3.806 178.246 3.806 c
177.871 3.806 177.59 3.505 177.59 3.11 c
177.59 2.568 178.172 2.325 178.695 2.325 c
179.5 2.325 179.934 3.169 179.953 3.224 c
180.102 2.794 180.531 2.325 181.246 2.325 c
182.484 2.325 183.156 3.86 183.156 4.161 c
183.156 4.294 183.062 4.294 183.027 4.294 c
182.914 4.294 182.895 4.235 182.859 4.161 c
182.465 2.868 181.656 2.587 181.281 2.587 c
180.812 2.587 180.625 2.962 180.625 3.376 c
180.625 3.638 180.684 3.9 180.812 4.423 c
181.227 6.075 l
h
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
